<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>autoScrollOutput</key>
	<true/>
	<key>beforeRunningCommand</key>
	<string>saveModifiedFiles</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby

require ENV["TM_SUPPORT_PATH"] + "/lib/tm/executor"
require ENV["TM_SUPPORT_PATH"] + "/lib/tm/save_current_document"
require ENV["TM_SUPPORT_PATH"] + "/lib/escape"

TM_MAKE = e_sh(ENV['TM_MAKE'] || 'make')

TextMate::Executor.make_project_master_current_document

ENV["TM_PROJECT_DIRECTORY"] ||= File.dirname(ENV["TM_FILEPATH"])
Dir.chdir(ENV["TM_PROJECT_DIRECTORY"])
ENV["TM_MAKE_FILE"] = ENV["TM_PROJECT_DIRECTORY"] + "/Makefile" if ENV["TM_MAKE_FILE"].nil? or not File.file?(ENV["TM_MAKE_FILE"])

flags = ["-w"]
flags &lt;&lt; "-f" + File.basename(ENV["TM_MAKE_FILE"])
flags &lt;&lt; ENV["TM_MAKE_FLAGS"] unless ENV["TM_MAKE_FLAGS"].nil?
flags &lt;&lt; ENV["TM_MAKE_TARGET"] unless ENV["TM_MAKE_TARGET"].nil?

ENV["TM_DISPLAYNAME"] = ENV["TM_MAKE_TARGET"] || "default"

Dir.chdir(File.dirname(ENV["TM_MAKE_FILE"]))

dirs = [ENV['TM_PROJECT_DIRECTORY']]
TextMate::Executor.run(TM_MAKE, flags, :verb =&gt; "Making", :use_hashbang =&gt; false) do |line, type|
  if line =~ /^g?make.*?: Entering directory `(.*?)'$/ and not $1.nil? and File.directory?($1)
    dirs.unshift($1)
    ""
  elsif line =~ /^g?make.*?: Leaving directory `(.*?)'$/ and not $1.nil? and File.directory?($1)
    dirs.delete($1)
    ""
  elsif line =~ /^(.*?):(?:(\d+):)?(?:(\d+):)?\s*(.*?)$/ and not $1.nil?
    file, lineno, column, message = $1, $2, $3, $4
    path = dirs.map{ |dir| File.expand_path(file, dir) }.find{ |path| File.file? path }
    unless path.nil?
      parms =  [    "url=file://#{e_url path}" ]
      parms &lt;&lt; [   "line=#{lineno}"            ] unless lineno.nil?
      parms &lt;&lt; [ "column=#{column}"            ] unless column.nil?
      info = file
      info &lt;&lt; " at line #{lineno}" unless lineno.nil?
      info &lt;&lt; ", column #{column}" unless column.nil?
      info &lt;&lt; "."
      info = info.gsub('&amp;', '&amp;amp;').gsub('&lt;', '&amp;lt;').gsub('"', '&amp;quot;')
      "&lt;a href=\"txmt://open?#{parms.join '&amp;'}\" title=\"#{info}\"&gt;#{htmlize message}&lt;/a&gt;&lt;br&gt;\n"
    end
  end
end
</string>
	<key>input</key>
	<string>document</string>
	<key>keyEquivalent</key>
	<string>@b</string>
	<key>name</key>
	<string>Build</string>
	<key>output</key>
	<string>showAsHTML</string>
	<key>uuid</key>
	<string>19F9C045-7BCC-429B-8C68-967B6BD15B84</string>
</dict>
</plist>
